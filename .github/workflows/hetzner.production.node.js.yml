# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Hetzner Production node.js

on:
  release:
    types: [ published ]

jobs:
  build-app:
    runs-on: [ self-hosted, production ]
    strategy:
      matrix:
        node-version: [ 16.x ]
    steps:
      - uses: actions/checkout@v2
      - name: Update secrets
        run: 'echo "$PRODUCTION_ENV" > .env.production'
        env:
          PRODUCTION_ENV: ${{secrets.PRODUCTION_ENV}}
      - name: 'Prepare ENV variables'
        run: set -a && . .env.production && set +a
      - name: 'Build app container'
        run: docker-compose --env-file=.env.production -f docker-compose.prod.yml build app
        env:
          VERSION: ${{ github.ref_name }}
          RUNNING_USER: ${{ secrets.HETZNER_RUNNING_USER }}
      - name: 'Push API container to local registry'
        run: docker-compose --env-file=.env.production -f docker-compose.prod.yml push app
        env:
          VERSION: ${{ github.ref_name }}
          RUNNING_USER: ${{ secrets.HETZNER_RUNNING_USER }}

  deploy:
    runs-on: self-hosted
    needs:
      - build-app
    steps:
      - name: Deploy to swarm
        run: VERSION=$VERSION RUNNING_USER=$RUNNING_USER docker stack deploy -c <(docker-compose -f docker-compose.prod.yml --env-file .env.production config) --with-registry-auth zg-frontend
        env:
          VERSION: ${{ github.ref_name }}
          RUNNING_USER: ${{ secrets.HETZNER_RUNNING_USER }}